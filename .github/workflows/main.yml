name: Build and Release Windows Binary

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  create-tag:
    name: Create Tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Create and push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ github.event.inputs.tag }}
        git push origin ${{ github.event.inputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build Windows Binary
    runs-on: windows-latest
    needs: create-tag

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag }}

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          windows-cargo-

    - name: Build binary
      run: |
        cargo build --release --target x86_64-pc-windows-msvc

    - name: Prepare binary for upload
      run: |
        # Create release directory
        mkdir release
        
        # Copy binary
        cp target/x86_64-pc-windows-msvc/release/gcli2api.exe release/
        
        # Create zip archive
        cd release
        7z a gcli2api-windows-x86_64.zip gcli2api.exe

    - name: Upload binary artifact
      uses: actions/upload-artifact@v3
      with:
        name: gcli2api-windows
        path: release/gcli2api-windows-x86_64.zip

  release:
    name: Create Release
    needs: [create-tag, build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag }}

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: gcli2api-windows
        path: release-assets

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag }}
        files: release-assets/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
